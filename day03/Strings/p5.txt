/*5. Input a string which contains some palindrome substrings. Find out the position of palindrome substrings if exist and replace it by *. (For example if input string is “bob has a radar plane” then it should convert in “*** has a ***** plane”. */

import java.util.Scanner;

public class p5{
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter a string: ");
        String inputString = scanner.nextLine();

        // Calling the function to replace palindrome substrings
        String resultString = replacePalindromes(inputString);

        // Displaying the result
        System.out.println("Modified string: " + resultString);
    }

    private static String replacePalindromes(String inputString) {
        String[] words = inputString.split("\\s+");
        StringBuilder result = new StringBuilder();

        for (String word : words) {
            if (isPalindrome(word)) {
                // If the word is a palindrome, replace it with '*' of the same length
                result.append("*".repeat(word.length())).append(" ");
            } else {
                // If not a palindrome, keep the original word
                result.append(word).append(" ");
            }
        }

        return result.toString().trim(); // Trim to remove the trailing space
    }

    private static boolean isPalindrome(String str) {
        // Removing spaces and converting the string to lowercase for case-insensitive comparison
        String cleanedString = str.replaceAll("\\s", "").toLowerCase();

        int length = cleanedString.length();

        for (int i = 0; i < length / 2; i++) {
            if (cleanedString.charAt(i) != cleanedString.charAt(length - 1 - i)) {
                return false;
            }
        }

        return true;
    }
}
